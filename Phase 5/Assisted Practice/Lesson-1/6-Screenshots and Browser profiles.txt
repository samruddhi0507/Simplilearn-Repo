1.6 Screenshots and Browser profiles
	

This section will guide you to:
●	How to take screenshots using selenium web driver and how to set the browser profile.

Development Environment
●	Eclipse IDE for Enterprise Java Developers Version Oxygen.3a Release (4.7.3a)
●	Java Development Kit Version 8
●	Selenium standalone server Version 3.141.59

This guide has mainly four subsections, namely: 
1.6.1 Screenshots
1.6.2 Running the code
1.6.3 Pushing the code to your GitHub repositories
1.6.4 Browser profiles
1.6.5 Pushing the code to your GitHub repositories


Step 1.6.1: Screenshots
●	Open Eclipse
●	Convert web driver object to TakeScreenshot
●	Call getScreenshotAs method to create image file
●	Copy file to desire location
	
Step 1.6.1.1 Convert web driver object to TakeScreenshot
●	Syntax : TakesScreenshot  scrShot = (TakesScreenshot)driver;

Step 1.6.1.2 Call getScreenshotAs method to create image file
●	Syntax: File srcFile = scrShot.getScreenshotAs(OutType.FILE);
Step 1.6.1.3 Copy file to desire location
●	Syntax: FileUtils.copyFile(source, filePath);
●	Open Eclipse and write the code giveln below 
package screenshots.screenshot;
import java.io.File;
import java.io.IOException;
import org.openqa.selenium.By;
import org.openqa.selenium.OutputType;
import org.openqa.selenium.TakesScreenshot;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.WebElement;
import org.openqa.selenium.chrome.ChromeDriver;
import com.sun.jna.platform.FileUtils;

public class Screenshots {
	 public static void main(String[] args ) throws IOException
	    {
	    	System.setProperty("webdriver.chrome.driver",   "C:\\Users\\Testing-L-064\\chromedriver_win32\\chromedriver.exe");
	       WebDriver driver = new ChromeDriver();
	       driver.get("https://www.flipkart.com/");
	       WebElement upload =        driver.findElement(By.xpath("//*[@type='text']"));
	       upload.click();
	       TakesScreenshot ts = (TakesScreenshot)driver;
	       File scr = ts.getScreenshotAs(OutputType.FILE);
	       FileUtils.copyFile(scr, new File("/Screenshot/test.png");
	       
	       
	    }
}

Step 1.6.2: Running the code
●	Run the code through eclipse.

Step 1.6.3: Pushing the code to your GitHub repositories
Open your command prompt and navigate to the folder where you have created your files
cd <folder path>
Initialize your repository using the following command:
git init
Add all the files to your git repository using the following command:
git add . 
Commit the changes using the following command:
git commit .  -m “Changes have been committed.”
Push the files to the folder you initially created using the following command:
git push -u origin master



Step 1.6.4: Browser profiles:
●	First of all, close the Firefox if it is opened.
●	Open Run (Windows+R) and type firefox.exe -p and click OK.
●	A dialogue box will open with named ‘Firefox -choose user profile’.
●	Select option ‘Create Profile’ from the window, and a Wizard will open, click on Next.
●	Provide your profile name which you want to create and click on Finish button.


Step 1.6.5: Pushing the code to your GitHub repositories
Open your command prompt and navigate to the folder where you have created your files.
cd <folder path>
Initialize your repository using the following command:
git init
Add all the files to your git repository using the following command:
git add . 
Commit the changes using the following command:
git commit .  -m “Changes have been committed.”
Push the files to the folder you created initially using the following command:
git push -u origin master




